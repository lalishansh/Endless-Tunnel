CMAKE_MINIMUM_REQUIRED (VERSION 3.21) # C++ 20

GET_FILENAME_COMPONENT (SETU_DIRECTORY "C:/DevDepo/GameEngine/" ABSOLUTE)

SET (CMAKE_CXX_STANDARD 20)
SET (CMAKE_CXX_STANDARD_REQUIRED ON)

PROJECT (TestSample)

SET (EXEC_TARGET "my_app")
SET (SHARED_TARGET "_scripts_")
FILE (GLOB HEADER_COLLECTION
	  "Runtime-target/**.h" "Runtime-target/**.hpp" "Runtime-target/**.hxx"
	  "Scripts-shared/**.h" "Scripts-shared/**.hpp" "Scripts-shared/**.hxx"
	  )

# Source Files
SET (EXEC_TARGET_SOURCES
	 #[[ HEADERS ]]
	 ${HEADER_COLLECTION}
	 #[[ Source - sorted by compilation dependency ]]
	 ./Runtime-static/Renderer.cpp
	 ./Runtime-static/GameManagingLayer.cpp
	 ./Runtime-static/main.cpp
	 )

SET (SHARED_TARGET_SOURCES
	 #[[ HEADERS ]]
	 ${HEADER_COLLECTION}
	 #[[ Source - sorted by compilation dependency ]]
	 Scripts-shared/source.cpp
	 )

SET (SETU_ENGINE_DIR "${SETU_DIRECTORY}/Setu-Engine")
SET (SETU_MODULES_DIR "${SETU_DIRECTORY}/Setu-Modules")

# shared target variables
SET (TARGET_INCLUDE_DIRS "${CMAKE_CURRENT_SOURCE_DIR}/Scripts-shared")
SET (TARGET_LINK_LIBS "")

# Shared Target
ADD_LIBRARY (${SHARED_TARGET} SHARED ${SHARED_TARGET_SOURCES})
TARGET_INCLUDE_DIRECTORIES (${SHARED_TARGET} PUBLIC ${TARGET_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES (${SHARED_TARGET} PUBLIC ${TARGET_LINK_LIBS})

# executable target variables
SET (TARGET_INCLUDE_DIRS ${TARGET_INCLUDE_DIRS} "${CMAKE_CURRENT_SOURCE_DIR}/Runtime-target")
SET (TARGET_LINK_LIBS    ${TARGET_LINK_LIBS}    "${SHARED_TARGET}")

# Executable Target
SET (SETU_TARGET_ENVIRONMENT "<null>")
SET (SETU_TARGET_ENVIRONMENT_DIR "<null>")
SET (SETU_TARGET_ENVIRONMENT_DEFINES "")

# Add environment
IF (${PLATFORM_ANDROID})
	# Mobile: Android platform specific settings
	GET_FILENAME_COMPONENT (SETU_TARGET_ENVIRONMENT_DIR "${SETU_DIRECTORY}/~env/android" ABSOLUTE)
	ADD_SUBDIRECTORY ("${SETU_TARGET_ENVIRONMENT_DIR}" "vendor/android_env")
	SET (SETU_TARGET_ENVIRONMENT ${ENV_ANDROID})
ELSEIF (${PLATFORM_DESKTOP})
	# Desktop: Windows, Linux platforms specific settings
	GET_FILENAME_COMPONENT (SETU_TARGET_ENVIRONMENT_DIR "${SETU_DIRECTORY}/~env/default" ABSOLUTE)
	ADD_SUBDIRECTORY ("${SETU_TARGET_ENVIRONMENT_DIR}" "vendor/desktop_env")
	SET (SETU_TARGET_ENVIRONMENT ${ENV_DEFAULT})
ELSE ()
	MESSAGE (FATAL_ERROR "Unknown Platform, Please select valid preset")
ENDIF ()

# now build app
IF (${PLATFORM_MOBILE})
	IF (${PLATFORM_ANDROID})
		SET (CMAKE_SHARED_LINKER_FLAGS
			 "${CMAKE_SHARED_LINKER_FLAGS} -u ANativeActivity_onCreate")
		ADD_LIBRARY (${EXEC_TARGET} SHARED
					 ${EXEC_TARGET_SOURCES})
		SET (SETU_TARGET_ENVIRONMENT_DEFINES ${SETU_TARGET_ENVIRONMENT_DEFINES} PLATFORM_ANDROID)
	ELSE ()
		MESSAGE (FATAL_ERROR "Unknown Mobile Platform, Please select valid preset/platform")
	ENDIF ()

	SET (SETU_TARGET_ENVIRONMENT_DEFINES ${SETU_TARGET_ENVIRONMENT_DEFINES} PLATFORM_MOBILE)

ELSEIF (${PLATFORM_DESKTOP})
	IF (${PLATFORM_WINDOWS})
		SET (SETU_TARGET_ENVIRONMENT_DEFINES ${SETU_TARGET_ENVIRONMENT_DEFINES} PLATFORM_WINDOWS)
	ELSEIF (${PLATFORM_LINUX})
		SET (SETU_TARGET_ENVIRONMENT_DEFINES ${SETU_TARGET_ENVIRONMENT_DEFINES} PLATFORM_LINUX)
	ELSE ()
		MESSAGE (FATAL_ERROR "Unknown Desktop Platform, Please select valid preset/platform")
	ENDIF ()

	ADD_EXECUTABLE (${EXEC_TARGET}
					${EXEC_TARGET_SOURCES})

	SET (SETU_TARGET_ENVIRONMENT_DEFINES ${SETU_TARGET_ENVIRONMENT_DEFINES} PLATFORM_DESKTOP)

ENDIF ()

## Add Setu-Engine and modules
ADD_SUBDIRECTORY ("${SETU_ENGINE_DIR}" "setu-engine")
ADD_SUBDIRECTORY ("${SETU_MODULES_DIR}" "setu-modules")
SET (TARGET_INCLUDE_DIRS
	 ${TARGET_INCLUDE_DIRS} "${SETU_MODULES_DIR}")

SET (ENGINE Setu::Engine)
SET (ENGINE_MODULES
	 Setu::Modules::Core_Windowing
	 Setu::Modules::Core_OpenGL
	 Setu::Modules::Core_DearImGui::OpenGL
	 )

TARGET_INCLUDE_DIRECTORIES (${EXEC_TARGET} PRIVATE
							${TARGET_INCLUDE_DIRS})
TARGET_LINK_LIBRARIES (${EXEC_TARGET}
					   ${TARGET_LINK_LIBS}
					   ${SETU_TARGET_ENVIRONMENT}
					   ${ENGINE}
					   ${ENGINE_MODULES}
					   )

MESSAGE ("## adding compile defns: ${SETU_TARGET_ENVIRONMENT_DEFINES}")

TARGET_COMPILE_DEFINITIONS (${SHARED_TARGET} PUBLIC ${SETU_TARGET_ENVIRONMENT_DEFINES})
TARGET_COMPILE_DEFINITIONS (${EXEC_TARGET} PUBLIC ${SETU_TARGET_ENVIRONMENT_DEFINES})
